@model ProductListViewModel

@{
    ViewData["Title"] = "Index";
}

<style>
    .custom-border {
        border: 0.5px solid black;
    }
</style>

<h3 class="text-center text-uppercase">list of products</h3>
@if (!ViewData.ModelState.IsValid)
{
    if (ViewData.ModelState[""] != null)
    {
        <div class="alert alert-danger">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>
    }
    else
    {
        <div class="alert alert-success" role="alert">
            @Html.ValidationSummary("Excel Import Success")
        </div>

    }
}
<form asp-action="ExcelUpload" method="post" enctype="multipart/form-data">

    <div class="row">
        <div class="col d-flex float-right">
            <label for="XlsFile" class="float-right">Select Excel File:</label>
            <input type="file" class="float-right" id="XlsFile" name="XlsFile" accept=".xlsx,.xls" />
        </div>
    </div>
    <div class="row">
        <div class="col d-flex justify-content-start">
            <button type="submit" class="btn btn-primary rounded float-left custom-border">Upload Products</button>
            <a asp-action="exportexcel" class="btn btn-primary rounded float-left custom-border"><i class="fa "></i> Download</a>
        </div>
        <div class="col d-flex justify-content-end">
            <a asp-action="Create" class="btn btn-primary rounded float-right custom-border"><i class="fa fa-plus-circle"></i> Add New</a>
        </div>
    </div>
</form>

<table class="table table-bordered">
    <thead class="thead-dark bg-info">
        <tr>
            <th>
                @Html.DisplayName("ProductCode")
            </th>
            <th>
                @Html.DisplayName("Name")
            </th>
            <th>
                @Html.DisplayName("Description")
            </th>
            <th>
                @Html.DisplayName("CategoryName")
            </th>
            <th>
                @Html.DisplayName("ProductCategory")
            </th>
            <th>
                @Html.DisplayName("Price")
            </th>
            <th>
                @Html.DisplayName("Image")
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Products) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductCategory.CategoryId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
@*             <td>
                @Html.DisplayFor(modelItem => item.Image)
            </td> *@
                <td>
                    <a asp-action="Details" asp-route-id="@item.ProductId">
                        <img src="@FileLocation.RetriveFileFromFolder@item.Image" class="img-thumbnail" height="100" width="100" asp-append-version="true" />
                    </a>
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ProductId" class="btn btn-sm btn-info rounded-0"><i class="fa fa-pencil-alt"></i></a>
                    <a asp-action="Details" asp-route-id="@item.ProductId" class="btn btn-sm btn-primary rounded-0"><i class="fa fa-eye"></i></a>
                    <a asp-action="Delete" asp-route-id="@item.ProductId" class="btn btn-sm btn-danger rounded-0"><i class="fa fa-trash-alt"></i></a>
                </td>
        </tr>
}
    </tbody>
</table>
